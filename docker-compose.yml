version: '3.8'


services:
    
    proxy:
        image: traefik:2.3
        ports:
            - 80:80
            - 8080:8080
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

    web:
        image: node:14.14-alpine
        volumes:
            - ./web/:/app/
        working_dir: /app/
        command: sh -c "yarn install && yarn start"
        labels:
            - traefik.enable=true
            - traefik.http.routers.web.rule=Host(`${HOSTNAME}`) && PathPrefix(`/`)
            - traefik.http.routers.web.entrypoints=web
            - traefik.http.services.web.loadbalancer.server.port=80

        
    api:
        image: node:14.14-alpine
        volumes:
            - ./api/:/app/
        working_dir: /app/
        command: sh -c "yarn install && yarn start"
        labels:
            - traefik.enable=true
            - traefik.http.routers.api.rule=Host(`${HOSTNAME}`) && PathPrefix(`/api`)
            - traefik.http.routers.api.entrypoints=web
            - traefik.http.services.api.loadbalancer.server.port=80
    
    auth:
        image: node:14.14-alpine
        volumes:
            - ./auth/:/app/
        working_dir: /app/
        environment:
            POSTGRES_URL: postgresql://username:password@auth_db/auth
        command: sh -c "yarn install && yarn start"
        labels:
            - traefik.enable=true
            - traefik.http.routers.auth.rule=Host(`${HOSTNAME}`) && PathPrefix(`/api/auth`)
            - traefik.http.routers.auth.entrypoints=web
            - traefik.http.services.auth.loadbalancer.server.port=80
            
    auth_db:
        image: postgres:13.0-alpine
        environment:
            POSTGRES_DB: auth
            POSTGRES_USER: username
            POSTGRES_PASSWORD: password
            

    mongo:
        image: mongo:4.4
        environment:
            MONGO_INITDB_ROOT_USERNAME: username
            MONGO_INITDB_ROOT_PASSWORD: password
            
    mongo_express:
        image: mongo-express
        environment:
            ME_CONFIG_SITE_BASEURL: /mongo
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: username
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
        labels:
            - traefik.enable=true
            - traefik.http.routers.mongo_express.rule=Host(`${HOSTNAME}`) && PathPrefix(`/mongo`)
            - traefik.http.routers.mongo_express.entrypoints=web
            - traefik.http.services.mongo_express.loadbalancer.server.port=8081
            
            
    adminer:
        image: adminer
        labels:
            - traefik.enable=true
            - traefik.http.routers.adminer.rule=Host(`${HOSTNAME}`) && PathPrefix(`/adminer`)
            - traefik.http.routers.adminer.entrypoints=web
            - traefik.http.services.adminer.loadbalancer.server.port=8080
